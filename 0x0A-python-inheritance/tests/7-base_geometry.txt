# This module contains test cases for integer_validator

    >>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

    >>> mod_doc = __import__("7-base_geometry").__doc__
    >>> len(mod_doc) > 1
    True

    >>> class_doc = __import__("7-base_geometry").BaseGeometry.__doc__
    >>> len(class_doc) > 1
    True

Testing non integer input to integer_validator
    >>> my_geom = BaseGeometry()
    >>> my_geom.integer_validator("my_int", "I like it")
    Traceback (most recent call last):
        ...
    TypeError: my_int must be an integer

Testing negative
    >>> my_geom.integer_validator("my_int", -25)
    Traceback (most recent call last):
        ...
    ValueError: my_int must be greater than 0

Testing large negative
    >>> my_geom.integer_validator("my_int", -2567666666666666666666666666666666666666666)
    Traceback (most recent call last):
        ...
    ValueError: my_int must be greater than 0

Testing large positive
    >>> my_geom.integer_validator("my_int", 2567666666666666666666666666666666666666666)

Testing zero
    >>> my_geom.integer_validator("my_int", 0)
    Traceback (most recent call last):
        ...
    ValueError: my_int must be greater than 0

Testing positive value
    >>> my_geom.integer_validator("my_int", 25)

Testing float
    >>> my_geom.integer_validator("my_float", 25.65)
    Traceback (most recent call last):
        ...
    TypeError: my_float must be an integer

    >>> my_geom.integer_validator("my_float", -25.65)
    Traceback (most recent call last):
        ...
    TypeError: my_float must be an integer

Testing complex numbers:
    >>> my_geom.integer_validator("my_complex", 8j)
    Traceback (most recent call last):
        ...
    TypeError: my_complex must be an integer

Testing no arguments
    >>> my_geom.integer_validator()
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'


    >>> my_geom.integer_validator(name = None, value = None)
    Traceback (most recent call last):
        ...
    TypeError: None must be an integer

    >>> my_geom.integer_validator(name = "", value = None)
    Traceback (most recent call last):
        ...
    TypeError:  must be an integer


Testing the undefined function area()
    >>> my_geom.area()
    Traceback (most recent call last):
        ...
    Exception: area() is not implemented

Testing the undefined function area() with an argument
    >>> my_geom.area(area = 23)
    Traceback (most recent call last):
        ...
    TypeError: area() got an unexpected keyword argument 'area'
